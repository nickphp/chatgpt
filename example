<?php
set_time_limit(0);//脚本声明周期无限
require __dir__ . '/ExcelWriteXlsx.class.php';//引入类
$filename = "example.xlsx";//输出的xlsx文件名
$stime = microtime(true);
$header = array(
    '订单号'=>'string',
    '',
    '订单总价'=>'string',
    '',
    '明细单价'=>'string',
    '明细数量'=>'string',
    '明细总价'=>'string',
    '商品名称'=>'string',
);
$data = array(
    'order_sn' => '1239394949493',
    'total_price' => '15238',
    'detail' => array(
        array('price' => '15','num' => '35','total_price' => '525','name' => 'aaaaa'),
        array('price' => '22','num' => '31','total_price' => '682','name' => 'bbbb'),
        array('price' => '44','num' => '23','total_price' => '1012','name' => 'ccc'),
        array('price' => '443','num' => '5','total_price' => '2215','name' => 'ddd'),
        array('price' => '123','num' => '78','total_price' => '9594','name' => 'eeee'),
    )
);

$data1 = array(
    'order_sn' => '43243242342432',
    'total_price' => '3344345',
    'detail' => array(
        array('price' => '12225','num' => '444','total_price' => '5254','name' => 'ee'),
        array('price' => '223','num' => '3133','total_price' => '68342','name' => 'fds'),
        array('price' => '4454','num' => '2333','total_price' => '10142','name' => 'aaa'),
        array('price' => '44533','num' => '53','total_price' => '22145','name' => 'ddsssd'),
        array('price' => '125433','num' => '378','total_price' => '94594','name' => 'dd'),
        array('price' => '332','num' => '221','total_price' => '555','name' => 'gggg'),
        array('price' => '4453233','num' => '33','total_price' => '22165445','name' => 'ffff'),
        array('price' => '5354','num' => '222','total_price' => '9456594','name' => 'eeee'),
    )
);

//实例化
$writer = new ExcelWriteXlsx();

//设置表头
$writer->writeSheetHeader('Sheet1', $header );

/**
 * 合并表头
 * 订单号区域　
 * 参数详解
 * 第1个参数 start_cell_row 开始行数字0为第一行
 * 第2个参数 start_cell_column 开始列0为第一列
 * 第3个参数 end_cell_row 结束行数字0为第一行
 * 第4个参数 end_cell_column 结束列数字1为第二列
 *
 * 四个参数分别是　0 0 0 1 它的表达意思是
 * 从第一行的第一列开始到第一行的第二列结束
 * 从表格内来看就是对应左边行号1对应列为A,B
 * 最后整体的表达就是合并A列和B列为一列单元格
 */
$writer->markMergedCell('Sheet1', '0', '0', '0', '1');

/**
 * 合并表头
 * 订单总价区域　
 * 参数详解
 * 第1个参数 start_cell_row 开始行数字0为第一行
 * 第2个参数 start_cell_column 开始列2为第三列
 * 第3个参数 end_cell_row 结束行数字0为第一行
 * 第4个参数 end_cell_column 结束列数字3为第四列
 *
 * 四个参数分别是　0 2 0 3 它的表达意思是
 * 从第一行的第三列开始到第一行的第四列结束
 * 从表格内来看就是对应左边行号1对应列为C,D
 * 最后整体的表达就是合并C列和D列为一列单元格
 */
$writer->markMergedCell('Sheet1', '0', '2', '0', '3');


function addExeclData($writer, $data, $rowStart, $rowEnd)
{

    $flag = false;
    foreach($data['detail'] as $key => $value) {

        if(!$flag) {
            $writer->writeSheetRow('Sheet1', array(
                $data['order_sn'],
                '',
                $data['total_price'],
                '',
                $value['price'],
                $value['num'],
                $value['total_price'],
                $value['name'],
            ));
            $flag = true;
        } else {
            $writer->writeSheetRow('Sheet1', array(
                '',
                '',
                '',
                '',
                $value['price'],
                $value['num'],
                $value['total_price'],
                $value['name'],
            ));
        }
    }
    $writer->markMergedCell('Sheet1', $rowStart, '0',$rowEnd, '1');
    $writer->markMergedCell('Sheet1', $rowStart, '2', $rowEnd, '3');
}

//模拟写入数据　通过两端模拟数据　分别生成execl表格
$endRow = 0;
for ($i=1; $i<=3; $i++) {
    if ($i % 2 == 0) {
        $startRow = $endRow + 1;//计算开始行　
        $endRow += count($data1['detail']);//计算结束行
       addExeclData($writer, $data1, $startRow, $endRow);
    } else {
        $startRow = $endRow + 1;//计算开始行　
        $endRow += count($data['detail']);//计算结束行
        addExeclData($writer, $data, $startRow, $endRow);
    }
}

//echo memory_get_usage() / 1024 /1024 ,PHP_EOL;
//$writer->writeToFile($filename);
//echo memory_get_usage() / 1024 /1024 ,PHP_EOL;
//$etime = microtime(true);
//echo $etime - $stime,PHP_EOL;



//导出xlsx文件
header('Content-disposition: attachment; filename="'.\ExcelTools\ExcelWriteXlsx::sanitize_filename($filename).'"');
header("Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
header('Content-Transfer-Encoding: binary');
header('Cache-Control: must-revalidate');
header('Pragma: public');
$writer->writeToStdOut();
